{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","useState","inputt","setInput","listt","setListt","listtt","map","item","index","onClick","e","id","console","log","prevListt","filter","className","name","type","placeholder","value","onChange","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2NAAe,I,YCuCAA,MAnCf,WACE,MAA2BC,mBAAS,IAApC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAaIC,EAASF,EAAMG,KAAI,SAACC,EAAKC,GAAN,OACrB,gCACE,+BAAOD,IACP,wBAAQE,QAAS,SAACC,GAdT,IAACC,IAcqBH,EAbjCI,QAAQC,IAAI,WACZT,GAAS,SAACU,GACT,OAAQA,EAAUC,QAAO,SAACR,EAAKC,GAC5B,OAAOA,IAAQG,SAUjB,sBAFQH,MAMZ,OACE,qCAEE,sBAAKQ,UAAU,OAAf,UACE,uBAAOC,KAAK,eAAeC,KAAK,OAAOF,UAAU,eAAeL,GAAG,2BAA2BQ,YAAY,WAAWC,MAAOnB,EAAQoB,SAAU,SAACX,GAAD,OAAOR,EAASQ,EAAEY,OAAOF,UACvK,wBAAQF,KAAK,SAASF,UAAU,kBAAkBP,QAAS,SAACC,GAAQN,EAAS,GAAD,mBAAKD,GAAL,CAAYF,KAAUC,EAAS,KAA3G,kBAIDG,MCvBQkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f9c60832.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport { useState } from 'react';\n\nfunction App() {\n  const [inputt, setInput] = useState('');\n  const [listt, setListt] = useState([]);\n\n  let deletee =(id)=>{\n    console.log(\"clicked\");\n    setListt((prevListt)=>{\n     return  prevListt.filter((item,index)=>{\n        return index!==id;\n      });\n    });\n   \n   \n  }\n\n  let listtt = listt.map((item,index) =>\n    <div key={index} >\n      <span>{item}</span>\n      <button onClick={(e)=>{deletee(index);}}>Delete</button>\n    </div>\n  );\n\n  return (\n    <>\n   \n      <div className=\"mb-3\">\n        <input name=\"mytextfield2\" type=\"text\" className=\"form-control\" id=\"exampleFormControlInput1\" placeholder=\"Add item\" value={inputt} onChange={(e) => setInput(e.target.value)} />\n        <button type=\"button\" className=\"btn btn-primary\" onClick={(e) => { setListt([...listt, inputt]); setInput(''); }}>+</button>\n\n      </div>\n    \n      {listtt}\n    </>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}